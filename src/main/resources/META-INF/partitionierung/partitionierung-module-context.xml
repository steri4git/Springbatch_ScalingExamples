<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<description>Example job to get you started. It provides a skeleton for
		a typical batch application.
	</description>

	<batch:job id="job1">
		<batch:step id="step1.master">
			<batch:partition step="step1" partitioner="partitioner1">
				<batch:handler grid-size="20" task-executor="taskExecutor" />
			</batch:partition>
		</batch:step>
	</batch:job>

	<batch:step id="step1">
		<batch:tasklet>
			<batch:chunk reader="itemReader1"  writer="itemWriter1" commit-interval="20"/>
		</batch:tasklet>
	</batch:step>
	
	<bean id="itemReader1" class="de.steri.springbatch.partitionierung.processing.Reader1" scope="step" >
	<property name="min" value="#{stepExecutionContext[minValue]}"></property>
	<property name="max" value="#{stepExecutionContext[maxValue]}"></property>
	</bean>

	<bean id="itemWriter1" class="de.steri.springbatch.partitionierung.processing.Writer1" scope="step"  >
	</bean>
	
	<bean id="partitioner1" class="de.steri.springbatch.partitionierung.processing.ColumnRangePartitioner" scope="step">
	</bean>

	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="20" />
		<property name="maxPoolSize" value="20" />
		
	</bean>
</beans>